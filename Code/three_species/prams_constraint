# <single_simualte>
single_simualte = True

weight_of_method_t_f = 3
weights_of_mets = np.array([1, 3, 3, 3, 1, 1, 1]) ** 2

[0.570191144849602, 0.931646076757303, 1.5017659382725181, 0.7432139638658931, 4.58159544980042]

[0.08421303478867034, 3.2111720262827133, 2.4632016965419368, 1.6074089113265173, 16.45563796105079]

[0.3582925195445051, 0.37303747438188706, 0.3424432722538566, 39.26884922557839]




# <tri_siumlate>
tri_siumlate = True

weight_of_method_t_f = 3
weights_of_mets = np.array([1, 3, 3, 3, 1, 1, 1]) ** 2
weights_of_model = np.array([1, 1, 1, 0, 0, 0, 4]) ** 2

[0.8516039806840168, 2.4032553959336544, 0.8552308181339471, 0.3739498650566896, 10.397138097838447,
0.4023115725009885, -0.9938186713060218, 4.008390276563394, 1.4080889207429004, 4.601349788906878,
0.3722720076122483, 0.6676647089211735, 0.46751450851730414, -40.10912843448732]

weight_of_method_t_f = 3
weights_of_mets = np.array([1, 3, 3, 3, 1, 1, 1]) ** 2
# weights_of_model = np.array([1, 1, 1, 2, 2, 2, 8]) ** 2
weights_of_model = np.array([1, 0, 0, 0, 0, 0, 2]) ** 2
[0.9452851560808915, 2.4608525374481713, 0.6368984429650837, 0.19539529026168823, 9.441237122962324,
0.4355792647640788, -0.1836444900414278, 4.121460770106738, 1.2407194577226246, -6.322783642682495,
0.022882275501178134, 0.5390822530749091, 1.1116686995391878, -41.68065153874193]


part uv:

[1.168314430168102, 2.2363715292841873, -2.723344621919333, -1.4772869056769062, 20.827151677686075, -0.6135359270095975, 7.320620587899702, 5.356137593444384, -2.6052138280369577, -44.842001266297785, 1.1429913042148667, -1.4580640737827777, 1.955022121689841, 65.04862138847236]

only_three = True
weights_of_mets = np.array([1, 3, 3, 3, 1, 1, 1]) ** 2
[0.5316415195662003, 1.715437520817079, 1.1923915768974633, 0.2614100337661942, 5.090737752045559, 0.4639106955799235, 1.6395119256085886, 3.74178814500565, -0.1628643063440981, 19.995948121000637, 0.3922252744607707, 0.35106946437417474, 0.5014095769102345, 50.23975012610666]

weights_of_mets = np.array([1, 3, 3, 6, 1, 1, 1]) ** 2
[0.9384354734712463, 1.4961883692996931, 0.16917985899649612, 1.3241943438453578, -1.1406818068360915, 0.1320722715311955, 1.002151211534355, 1.9167263722013885, 2.709593784433049, 24.509051538854393, 0.7902652047234557, 0.18739364028632338, 0.12997755112950726, 84.72445060247341]

experiment 2
[0.7166854273468767, 1.0463469931792089, 0.44859090393518974, 0.9420264830911433, 3.57842370365739, 0.29469581528054817, 1.3129673307005785, 4.008746567444895, 3.5856746348703448, 15.966482964688055, 0.045947535722598055, 0.3088772446421558, 0.48012311785157635, 74.92558732132012]




model1 single,
method 0
[1.433335362222917, 1.15457157188259, 0.5468957383335098, 0.10480121859794278, 5.154751661983729]


method 3
1.0427801795586897, 0.9135463040336042, 1.4214403129962343, 0.7376016138286388, 4.558209420108097]
0.6593345353580901



model2 single,
method 0
[-0.046571450591826144, 4.659817968644877, 2.4572074763531067, 1.6369535782375348, 18.873172259458585]

method 3
0.4809582604557605, 2.5290348011339177, 2.3407531995102713, 1.5785823579227989, 15.862571992757353]
13.863665991755523

model2 single,
method 0
[0.6034045973828532, 1.8755639934969355, -0.013909183005616804, 64.94949768434573]

method 3
[0.04671497073148086, 0.6492369692059639, 0.021257443061757867, 432.1697515054191]


bi culture
[1.5579744536257154, 1.7161977998163387, 1.8723614815793845, 1.5246155424490526, 4.160232573839718,
0.4848069799553387, 3.0538307347230598, 3.021289135698206, -2.5461766838064603, 10.462393257585187,
0.054502782619583454, 0.5836674738268861, 0.011540201163736587, 829.14263912772]


bi :
weight_of_method_t_f = 3
weights_of_mets = np.array([1, 3, 3, 3, 1, 1, 1]) ** 2
weights_of_model = np.array([2, 1, 1, 4, 4, 4]) ** 2

[1.0134129016964364, 1.8167855117118696, 1.6887020371827948, 1.8007040435701729, 4.595784326798835,
0.45825767976834664, 3.8223700475384508, 3.383813261750909, 2.471393889533168, 3.223990376818657,
0.05621111043584265, 0.8657454388373531, 0.0055125415928495795, 929.5609612290204]

bi no ac




threeï¼š
weight_of_method_t_f = 3
weights_of_mets = np.array([1, 3, 3, 3, 1, 1, 1]) ** 2
weights_of_model = np.array([1, 1, 1, 2, 2, 2, 8]) ** 2
[1.518659997601068, 1.646489002328802, 1.795687664587419, 1.677109551651776, 0.3073859669905389,
3.124820322638058, 3.206763887334695, 2.250838861125282, 9.493809077968674, 0.0446768995463106,
0.5884082273289688, 0.013203061027184812, 826.6179226447925]






part uv:








